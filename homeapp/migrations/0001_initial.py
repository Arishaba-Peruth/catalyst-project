# Generated by Django 5.2 on 2025-04-30 05:58

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Userprofile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_director', models.BooleanField(default=False)),
                ('is_manager', models.BooleanField(default=False)),
                ('is_salesagent', models.BooleanField(default=False)),
                ('username', models.TextField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=50)),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('address', models.TextField(max_length=50)),
                ('gender', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Deferred_Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name_of_buyer', models.CharField(blank=True, null=True)),
                ('Nin', models.CharField(unique=True)),
                ('Location', models.CharField()),
                ('Amount_due', models.IntegerField(default=0)),
                ('Contact', models.IntegerField()),
                ('Sales_agent_name', models.CharField()),
                ('Due_date', models.DateField(auto_now_add=True)),
                ('Produce_name', models.CharField()),
                ('Produce_type', models.CharField()),
                ('Tonnage', models.IntegerField(default=0)),
                ('Date_of_dispatch', models.DateField(auto_now_add=True)),
                ('Branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='homeapp.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name_of_produce', models.CharField(max_length=100, null=True)),
                ('Produce_type', models.CharField(blank=True, choices=[('Internal', 'Internal'), ('External', 'External')], null=True)),
                ('Date', models.DateField(auto_now_add=True)),
                ('Tonnage_in_kgs', models.IntegerField(default=0)),
                ('total_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('Cost', models.IntegerField(default=0)),
                ('Unit_price', models.IntegerField(blank=True, null=True)),
                ('Dealer_name', models.CharField(default=0)),
                ('Contact', models.IntegerField(default=0)),
                ('received_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('Branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='homeapp.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(blank=True, null=True)),
                ('Tonnage_in_kgs', models.IntegerField()),
                ('Amount_paid', models.IntegerField(default=0)),
                ('Sales_agent_name', models.CharField()),
                ('Date_time', models.DateTimeField(auto_now_add=True)),
                ('Name_of_buyer', models.CharField(blank=True)),
                ('method_of_payment', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Credit', 'Credit')], null=True)),
                ('Name_of_produce', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='homeapp.stock')),
            ],
        ),
    ]
